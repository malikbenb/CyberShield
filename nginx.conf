server {
    listen 80 default_server; # Listen on port 80 for any host name if others don't match
    server_name cybershield-algeria.com www.cybershield-algeria.com localhost; # Added localhost

    # Configuration pour le challenge Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Racine du site pour les fichiers statiques (Frontend)
    # Déplacé ici pour être géré par le serveur HTTP principal
    root /usr/share/nginx/html;
    index index.html index.htm;

    # API Proxy - Placed before generic location /
    location /api/ {
        proxy_pass http://api:8000/;
        proxy_set_header Host $host; # Important for backend routing
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Grafana Proxy
    location /grafana/ {
        proxy_pass http://grafana:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Prometheus Proxy (accès restreint)
    location /prometheus/ {
        # Uncomment and create .htpasswd file if needed
        # auth_basic "Restricted Access";
        # auth_basic_user_file /etc/nginx/.htpasswd;
        proxy_pass http://prometheus:9090/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Scanners files location
    location /scanners/ {
        alias /usr/share/nginx/html/scanners/;
        autoindex off;
        add_header Content-Disposition "attachment";
        
        # Sécurisation des téléchargements Pro et Entreprise
        location ~ ^/scanners/(pro|enterprise)/ {
            auth_request /api/auth/check_subscription;
            auth_request_set $auth_status $upstream_status;
            
            # En cas d'échec d'authentification, rediriger vers la page d'abonnement
            error_page 401 = @subscription_required;
            
            alias /usr/share/nginx/html/scanners/$1/;
            add_header Content-Disposition "attachment";
        }
    }
    
    # Endpoint pour vérifier l'abonnement
    location = /api/auth/check_subscription {
        internal;
        proxy_pass http://api:8000/auth/check_subscription;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Redirection en cas d'abonnement requis
    location @subscription_required {
        return 302 /dashboard/subscription?required=true;
    }

    # Frontend Static Files & Routing (Catch-all)
    location / {
        try_files $uri $uri/ /index.html;
        # Ensure index.html exists at /usr/share/nginx/html/index.html
    }

    # Optional: Add specific error pages
    # error_page 404 /404.html;
    # location = /404.html {
    #     internal;
    # }
    # error_page 500 502 503 504 /50x.html;
    # location = /50x.html {
    #     internal;
    # }
}

# --- Bloc HTTPS commenté --- 
# Décommentez ce bloc lorsque vous aurez des certificats SSL valides
# et que vous voudrez activer HTTPS.
# server {
#     listen 443 ssl http2; # Assuming you want HTTPS eventually
#     server_name cybershield-algeria.com www.cybershield-algeria.com localhost; # Added localhost
# 
#     # Certificats SSL (Uncomment and ensure paths are correct when ready)
#     ssl_certificate /etc/letsencrypt/live/cybershield-algeria.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/cybershield-algeria.com/privkey.pem;
#     # include /etc/letsencrypt/options-ssl-nginx.conf; # Recommended: Use Let's Encrypt's suggested SSL params
#     # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # Recommended: Use Let's Encrypt's suggested DH params
# 
#     # Paramètres SSL recommandés (Keep if using SSL)
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
#     ssl_session_timeout 1d;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_tickets off;
#     ssl_stapling on;
#     ssl_stapling_verify on;
# 
#     # HSTS (HTTP Strict Transport Security) - Uncomment when SSL is fully working
#     # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
# 
#     # Autres en-têtes de sécurité
#     add_header X-Content-Type-Options nosniff;
#     add_header X-Frame-Options SAMEORIGIN;
#     add_header X-XSS-Protection "1; mode=block";
# 
#     # Racine du site pour les fichiers statiques (Frontend)
#     root /usr/share/nginx/html;
#     index index.html index.htm;
# 
#     # API Proxy - Placed before generic location /
#     location /api/ {
#         proxy_pass http://api:8000/;
#         proxy_set_header Host $host; # Important for backend routing
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# 
#     # Grafana Proxy
#     location /grafana/ {
#         proxy_pass http://grafana:3000/;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# 
#     # Prometheus Proxy (accès restreint)
#     location /prometheus/ {
#         # Uncomment and create .htpasswd file if needed
#         # auth_basic "Restricted Access";
#         # auth_basic_user_file /etc/nginx/.htpasswd;
#         proxy_pass http://prometheus:9090/;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# 
#     # Frontend Static Files & Routing (Catch-all)
#     location / {
#         try_files $uri $uri/ /index.html;
#         # Ensure index.html exists at /usr/share/nginx/html/index.html
#     }
# 
#     # Optional: Add specific error pages
#     # error_page 404 /404.html;
#     # location = /404.html {
#     #     internal;
#     # }
#     # error_page 500 502 503 504 /50x.html;
#     # location = /50x.html {
#     #     internal;
#     # }
# }

